FROM ubuntu:trusty

RUN apt-get update && apt-get install --fix-missing -y \
    python \
    gcc \
    apt-utils \
    python-dev \
    python-pip \
    build-essential \
    cmake \
    libffi6 \
    pkg-config

RUN apt-get install -y \
    libjpeg8-dev \
    libtiff4-dev \
    libjasper-dev \
    libpng12-dev

RUN apt-get install -y \
    libgtk2.0-dev

RUN apt-get install -y \
    libavcodec-dev \
    libavformat-dev \
    libswscale-dev \
    libv4l-dev

RUN pip install numpy 
    #django \
    #cffi \
    #virtualenv \
    #virtualenvwrapper \
    #numpy

#RUN export WORKON_HOME=$HOME/.virtualenvs && \
    #source /usr/local/bin/virtualenvwrapper.sh

#RUN mkvirtualenv cv3

# Set environmental variables.
ENV DJANGO_SETTINGS_MODULE=project.settings \
    FACEREC_CONFIG=/facerec/docker/base/config.py \
    FACEREC_DIR=/facerec \
    FACEREC_APP_DIR=/FACEREC/project \
    FACEREC_MEDIA_DIR=/data/media \
    FACEREC_CACHE_DIR=/data/cache \
    UWSGI_HTTP_SOCKET=0.0.0.0:8000 \
    UWSGI_PROCESSES=4 \
    CELERY_PROCESSES=4 \
    FACEREC_USER=facerec \
    FACEREC_GROUP=facerec \
    HOME=/home/facerec

# Create non root user and groups.
RUN set -x && \
    groupadd --system --gid 1000 $FACEREC_GROUP && \
    useradd --system --gid $FACEREC_GROUP --uid 1000 -m $FACEREC_USER

# Add source code.
COPY . /facerec

# Run link to brainance-ctl.
RUN ln -s $FACEREC_DIR/docker/base/ctl.sh /usr/local/bin/facerec-ctl

# Switch working directory to source code.
WORKDIR $FACEREC_APP_DIR

# Define volumes.
VOLUME ["$FACEREC_MEDIA_DIR", "$FACEREC_CACHE_DIR"]

# Define entrypoint.
ENTRYPOINT ["/facerec/docker/base/entry.sh"]

RUN cd opencv && \
    mkdir build && \
    cd build && \
    cmake -D CMAKE_BUILD_TYPE=RELEASE \
    -D CMAKE_INSTALL_PREFIX=/lib \
    -D PYTHON2_EXECUTABLE=/usr/bin/python2.7 \
    -D PYTHON_INCLUDE_DIR=/usr/include/python2.7 \
    -D \
PYTHON2_NUMPY_INCLUDE_DIRS=/usr/local/lib/python2.7/dist-packages/numpy/core/include \
    -D INSTALL_C_EXAMPLES=OFF \
    -D INSTALL_PYTHON_EXAMPLES=OFF \
    -D OPENCV_EXTRA_MODULES_PATH=/opt/opencv_contrib/modules \
    -D BUILD_EXAMPLES=OFF .. && \
    make -j8

RUN cd opencv/build && \
    make install && \
    ldconfig
