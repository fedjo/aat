- [x] Fork only opencv or opencv_contrib to make the changes the other repo fetch the upstream

- [x] Containerized builds. Build one container which builds and installs Opecv with Python bindings. The build another container inheriting the first and installing the app. So the firsta container will not change all the time.
    Containers built:
        - [x] First container build and install opencv. Problem with luck of space and not finding numpy
        - [x] Second container build and install the django application

- [X] Fix the HTTP API according to the document
- [ ]  API calls [0]
    - [x] POST (upload) zip file with faces and create faces db and create pretained config
    - [x] GET list of all models uplaoded
    - [x] GET default and example configuration
    - [x] POST new configuration
    - [ ] Train cascade + List Cascades
    - [ ] POST to receive configuration and content and annotate it
    - [ ] Send back annotation metadata in JSON
        - [ ] Create aggragated metadata from every annotation process in the form of shotlist
- [ ] Emebed Tensorflow for object detection instead of opencv_dnn module
- [x] Add docker volume to store data, and fix the whole set up
- [ ] Normalize face recognition results
- [ ] Normalize face detection results
- [x] Option for bounding boxes (true/false)
- [x] Selective Search before object detection
- [ ] Give the oppurtunity to train a haar cascade to recognize specific objects
- [x] Add celery for asynchronous tasks
    - [x] Create tasks for face detection/ face recognition/ object detection
    - [x] Fix celery tasks time limits to handle long detection tasks [1]
- [ ] Give option to user to detect/recognize every X frames
- [ ] Automatically select every how many frames will run the annotation process
- [ ] Automatic subtitling (create subs with autosub tool, merge subtitles with ffmpeg)
- [ ] Add authentication system -> Integration with SSO



---- Not priority ----

- [ ] Try to solve issues with py-faster rcnn
- [ ] Embedd py-faster rcnn to the application
- [ ] Gender classification
- [ ] Age classification
- [ ] Landmark/Location detection


[0] https://philsturgeon.uk/api/2016/01/04/http-rest-api-file-uploads/
[1] http://docs.celeryproject.org/en/latest/userguide/workers.html#time-limits
